## Lesson Aims:
* Be able to describe and apply the following operations: 
  * push
  * pop
  * peek 
  * test for empty stack
  * test for  full stack

---
Since you are going to implement all the other stack methods in the worksheet, I am only going to show you how to implement **Full** and **Peek** here.
**Full**
The **Full** method returns `True` if and only if the Stack is full.
```python
# The stack is only full if the current size of the stack is equal to the capacity.
# This means there are so many elements in the stack, that they completely use up
# its capacity.
def isFull(self):
    return self.size() == self.capacity
```

**Peek**
The `Peek` method returns the element on the top of the Stack, without removing it.
```python
# If the stack is empty, there is nothing to peek at, but if the stack has elements, return
# the element on the top of the stack without deleting it.
def peek(self):
    if self.isEmpty():
        print("Error: Nothing to peek at!")
    else:
        return self.stack[self.pointer]
```
